<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--  Brand Button  -->

    <!--  Templates  -->
    <Style x:Key="DefaultBrandButtonTemplate" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="MinHeight" Value="34" />
        <Setter Property="Padding" Value="16,4" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{DynamicResource BrandColorSolidBrush}"
                        CornerRadius="5"
                        TextBlock.Foreground="{TemplateBinding Foreground}">
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.95" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Templates  -->

    <!--  Default  -->

    <Style BasedOn="{StaticResource DefaultBrandButtonTemplate}" TargetType="{x:Type Button}" />

    <Style
        x:Key="BrandSmallButton"
        BasedOn="{StaticResource DefaultBrandButtonTemplate}"
        TargetType="{x:Type Button}">
        <Setter Property="Height" Value="32" />
    </Style>

    <Style
        x:Key="BrandMediumButton"
        BasedOn="{StaticResource DefaultBrandButtonTemplate}"
        TargetType="{x:Type Button}">
        <Setter Property="Height" Value="44" />
        <Setter Property="Padding" Value="24,6" />
        <Setter Property="FontSize" Value="16" />
    </Style>

    <Style
        x:Key="BrandLargeButton"
        BasedOn="{StaticResource DefaultBrandButtonTemplate}"
        TargetType="{x:Type Button}">
        <Setter Property="Height" Value="52" />
        <Setter Property="Padding" Value="32,8" />
        <Setter Property="FontSize" Value="16" />
    </Style>

    <!--  Default  -->

    <!--  Icon  -->

    <Style
        x:Key="BrandIconSmallButton"
        BasedOn="{StaticResource DefaultBrandButtonTemplate}"
        TargetType="{x:Type Button}">
        <Setter Property="Height" Value="32" />
        <Setter Property="Padding" Value="8,6,16,6" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <!--  Icon  -->


    <!--  Brand Button  -->

    <!--  Icon Button  -->

    <Style x:Key="IconButton" TargetType="{x:Type Button}">
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="5">
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  GhostButton  -->
    <Style x:Key="DefaultGhostButtonTemplate" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="MinWidth" Value="32" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource BrandColorSolidBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                        x:Name="border"
                        Padding="{TemplateBinding Padding}"
                        Background="Transparent"
                        BorderBrush="{DynamicResource BrandColorSolidBrush}"
                        BorderThickness="1"
                        CornerRadius="5"
                        TextBlock.Foreground="{TemplateBinding Foreground}">
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="True" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value="0.8" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>